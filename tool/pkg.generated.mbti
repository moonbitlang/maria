// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/maria/tool"

// Values
fn error(Json, error? : Error) -> Result

fn ok(Json) -> Result

fn[T] tool(description~ : String, name~ : String, parameters~ : Map[String, Json], async (Json, T) -> Result noraise, render~ : async (Result) -> String noraise) -> Tool[T]

// Errors

// Types and methods
pub struct Result {
  output : Json
  error : Error?
}
impl ToJson for Result

pub struct Tool[T] {
  desc : ToolDesc
  render : async (Result) -> String noraise
  // private fields
}
async fn[T] Tool::call(Self[T], Json, T) -> Result noraise

pub struct ToolDesc {
  description : String
  name : String
  parameters : Map[String, Json]
}

// Type aliases

// Traits

