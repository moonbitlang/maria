// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/maria/internal/fs"

// Values
async fn exists(StringView) -> Bool

async fn exists_as_file(StringView) -> Bool

async fn kind(StringView) -> FileKind

async fn list_directory(StringView) -> Array[DirectoryEntry]

async fn make_directory(StringView, recursive? : Bool, exists_ok? : Bool) -> Unit

async fn read_file(StringView) -> String

async fn remove(StringView) -> Unit

async fn resolve(StringView) -> String

fn stat(StringView) -> Stat raise

async fn[T] with_temporary_directory(String, async (String) -> T) -> T

async fn write_bytes_to_file(StringView, Bytes) -> Unit

async fn write_to_file(StringView, StringView) -> Unit

// Errors

// Types and methods
pub struct DirectoryEntry {
  path : String
  name : String
  kind : FileKind
}
fn DirectoryEntry::compare(Self, Self) -> Int // from trait `Compare`
fn DirectoryEntry::equal(Self, Self) -> Bool // from trait `Eq`
fn DirectoryEntry::hash(Self) -> Int // from trait `Hash`
fn DirectoryEntry::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn DirectoryEntry::op_equal(Self, Self) -> Bool // from trait `Eq`
fn DirectoryEntry::output(Self, &Logger) -> Unit // from trait `Show`
fn DirectoryEntry::to_json(Self) -> Json // from trait `ToJson`
fn DirectoryEntry::to_string(Self) -> String // from trait `Show`
impl Compare for DirectoryEntry
impl Eq for DirectoryEntry
impl Hash for DirectoryEntry
impl Show for DirectoryEntry
impl ToJson for DirectoryEntry

pub enum FileKind {
  Unknown
  Regular
  Directory
  SymLink
  Socket
  Pipe
  BlockDevice
  CharDevice
}
fn FileKind::compare(Self, Self) -> Int // from trait `Compare`
fn FileKind::equal(Self, Self) -> Bool // from trait `Eq`
fn FileKind::hash(Self) -> Int // from trait `Hash`
fn FileKind::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn FileKind::op_equal(Self, Self) -> Bool // from trait `Eq`
fn FileKind::output(Self, &Logger) -> Unit // from trait `Show`
fn FileKind::to_json(Self) -> Json // from trait `ToJson`
fn FileKind::to_string(Self) -> String // from trait `Show`
impl Compare for FileKind
impl Eq for FileKind
impl Hash for FileKind
impl Show for FileKind
impl ToJson for FileKind

type FileRead
fn FileRead::close(Self) -> Unit
async fn FileRead::create(StringView) -> Self
async fn FileRead::read_text(Self) -> String

type Stat
fn Stat::atime(Self) -> Int64
fn Stat::mtime(Self) -> Int64

// Type aliases

// Traits

